server:
    #  softNofileLimit: 1000
    #  hardNofileLimit: 1000
    applicationConnectors:
        - type: http
          port: 8080

    adminConnectors:
        - type: http
          port: 8081

# Logging settings.
logging:

    # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
    level: INFO

    # Logger-specific levels.
    loggers:

        # Sets the level for 'com.example.app' to DEBUG.
        com.example.app: DEBUG

        # Redirects SQL logs to a separate file
        org.hibernate.SQL:
            level: DEBUG

    # Logback's Time Based Rolling Policy - archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}.log.gz
    # Logback's Size and Time Based Rolling Policy -  archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
    # Logback's Fixed Window Rolling Policy -  archivedLogFilenamePattern: /tmp/application-%i.log.gz

    appenders:
        - type: console
        - type: file
          threshold: INFO
          logFormat: "%-6level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n"
          currentLogFilename: /tmp/application.log
          archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
          archivedFileCount: 7
          timeZone: UTC
          maxFileSize: 10MiB

database:
    # the name of your JDBC driver
    driverClass: com.mysql.cj.jdbc.Driver

    user: root
    password: root
    url: jdbc:mysql://${DB_IP:-localhost}:3306/app

    # any properties specific to your JDBC driver:
    properties:
        charSet: UTF-8

    # the maximum amount of time to wait on an empty pool before throwing an exception
    maxWaitForConnection: 1s

    # the SQL query to run when validating a connection's liveness
    validationQuery: "/* MyService Health Check */ SELECT 1"

    # the timeout before a connection validation queries fail
    validationQueryTimeout: 3s

    # the minimum number of connections to keep open
    minSize: 8

    # the maximum number of connections to keep open
    maxSize: 32

    # whether or not idle connections should be validated
    checkConnectionWhileIdle: false

    # the amount of time to sleep between runs of the idle connection validation, abandoned cleaner and idle pool resizing
    evictionInterval: 10s

    # the minimum amount of time an connection must sit idle in the pool before it is eligible for eviction
    minIdleTime: 1 minute

    # validate a SQL connection is viable before borrowing from the pool
    # this is rather *critical* if you want your service to recover loss of connectivity to the db
    checkConnectionOnBorrow: true
